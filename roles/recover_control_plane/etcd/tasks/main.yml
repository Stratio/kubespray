---
- name: Get etcd endpoint health
  command: "{{ bin_dir }}/etcdctl endpoint --cluster health --hex -w json"
  register: etcd_endpoint_health
  ignore_errors: true  # noqa ignore-errors
  changed_when: false
  check_mode: no
  environment:
    ETCDCTL_API: 3
    ETCDCTL_CERT: "{{ kube_cert_dir + '/etcd/server.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd']|first + '.pem' }}"
    ETCDCTL_KEY: "{{ kube_cert_dir + '/etcd/server.key' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd']|first + '-key.pem' }}"
    ETCDCTL_CACERT: "{{ kube_cert_dir + '/etcd/ca.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/ca.pem' }}"
    ETCDCTL_ENDPOINTS: "https://127.0.0.1:2379"

- name: Set healthy_members fact
  set_fact:
    healthy_members: "{{ (etcd_endpoint_health.stdout if etcd_endpoint_health.stdout | length else '{}') |
                          from_json | json_query('[?(@.health)]') }}"

- name: Set healthy and has_quorum facts
  set_fact:
    healthy: "{{ healthy_members | length == groups['etcd'] | length }}"
    has_quorum: "{{ healthy_members | length > (groups['etcd'] | length / 2) }}"

- include_tasks: recover_lost_quorum.yml
  when:
    - etcd_deployment_type != 'kubeadm'
    - not has_quorum

- name: Remove etcd data dir
  file:
    path: "{{ etcd_data_dir }}"
    state: absent
  delegate_to: "{{ item }}"
  with_items: "{{ groups['broken_etcd'] }}"
  ignore_errors: true  # noqa ignore-errors
  when: has_quorum

- name: Delete old certificates
  file:
    path: "{{ kube_cert_dir + '/etcd' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir }}"
    state: absent
  delegate_to: "{{ item }}"
  with_items: "{{ groups['broken_etcd'] }}"
  ignore_errors: true  # noqa ignore-errors

- name: Get etcd cluster members
  command: "{{ bin_dir }}/etcdctl member list --hex -w json"
  register: etcd_member_list
  changed_when: false
  check_mode: no
  environment:
    ETCDCTL_API: 3
    ETCDCTL_CERT: "{{ kube_cert_dir + '/etcd/server.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd']|first + '.pem' }}"
    ETCDCTL_KEY: "{{ kube_cert_dir + '/etcd/server.key' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd']|first + '-key.pem' }}"
    ETCDCTL_CACERT: "{{ kube_cert_dir + '/etcd/ca.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/ca.pem' }}"
    ETCDCTL_ENDPOINTS: "https://127.0.0.1:2379"
  when:
    - not healthy
    - has_quorum

- name: Remove broken cluster members
  command: "{{ bin_dir }}/etcdctl member remove {{ etcd_member_list.stdout | from_json |
            json_query(etcd_member_id_query) | first }}"
  environment:
    ETCDCTL_API: 3
    ETCDCTL_CERT: "{{ kube_cert_dir + '/etcd/server.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd']|first + '.pem' }}"
    ETCDCTL_KEY: "{{ kube_cert_dir + '/etcd/server.key' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/admin-' + groups['etcd']|first + '-key.pem' }}"
    ETCDCTL_CACERT: "{{ kube_cert_dir + '/etcd/ca.crt' if etcd_deployment_type == 'kubeadm' else etcd_cert_dir + '/ca.pem' }}"
    ETCDCTL_ENDPOINTS: "https://127.0.0.1:2379"
  with_items: "{{ groups['broken_etcd'] }}"
  vars:
    etcd_member_id_query: "members[?name=='{{ hostvars[item]['etcd_member_name'] }}'].ID"
  when:
    - not healthy
    - has_quorum
    - etcd_member_list.stdout | from_json | json_query(etcd_member_id_query) | length